// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolHubApi.Data;

#nullable disable

namespace SchoolHubApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231012150308_AddModels")]
    partial class AddModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("Classname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.ClassCoursePupilGrade", b =>
                {
                    b.Property<int>("ClassCoursePupilGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassCoursePupilGradeId"));

                    b.Property<string>("CourseClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<int?>("GradeNameId")
                        .HasColumnType("int");

                    b.Property<int?>("PupilId")
                        .HasColumnType("int");

                    b.Property<int>("Semestr")
                        .HasColumnType("int");

                    b.HasKey("ClassCoursePupilGradeId");

                    b.HasIndex("CourseClassId");

                    b.HasIndex("GradeNameId");

                    b.HasIndex("PupilId");

                    b.ToTable("ClassCoursePupilGrades");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.CourseClass", b =>
                {
                    b.Property<string>("CourseClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CourseClassId");

                    b.HasIndex("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("CourseClasses");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.GradeName", b =>
                {
                    b.Property<int>("GradeNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeNameId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeNameId");

                    b.ToTable("GradeNames");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeworkId"));

                    b.Property<string>("CourseClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HomeworkFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseClassId");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.HomeworkPupil", b =>
                {
                    b.Property<string>("HomeworkPupilId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ClassCoursePupilGradeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("HomeworkId")
                        .HasColumnType("int");

                    b.Property<int>("PupilId")
                        .HasColumnType("int");

                    b.HasKey("HomeworkPupilId");

                    b.HasIndex("ClassCoursePupilGradeId");

                    b.HasIndex("HomeworkId");

                    b.HasIndex("PupilId");

                    b.ToTable("HomeworkPupils");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.ParentChild", b =>
                {
                    b.Property<int>("ParentChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentChildId"));

                    b.Property<int>("ChildUserId")
                        .HasColumnType("int");

                    b.Property<int>("ParentUserId")
                        .HasColumnType("int");

                    b.HasKey("ParentChildId");

                    b.HasIndex("ChildUserId");

                    b.HasIndex("ParentUserId");

                    b.ToTable("Parentchildren");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Pupil", b =>
                {
                    b.Property<int>("PupilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PupilId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PupilId");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("Pupils");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("AccessCode")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pesel")
                        .HasColumnType("int");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.ClassCoursePupilGrade", b =>
                {
                    b.HasOne("SchoolHubApi.Models.Domain.CourseClass", null)
                        .WithMany("ClassCoursePupilGrades")
                        .HasForeignKey("CourseClassId");

                    b.HasOne("SchoolHubApi.Models.Domain.GradeName", null)
                        .WithMany("ClassCoursePupilGrades")
                        .HasForeignKey("GradeNameId");

                    b.HasOne("SchoolHubApi.Models.Domain.Pupil", null)
                        .WithMany("ClassCoursePupilGrades")
                        .HasForeignKey("PupilId");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.CourseClass", b =>
                {
                    b.HasOne("SchoolHubApi.Models.Domain.Class", null)
                        .WithMany("CourseClasses")
                        .HasForeignKey("ClassId");

                    b.HasOne("SchoolHubApi.Models.Domain.Course", null)
                        .WithMany("CourseClasses")
                        .HasForeignKey("CourseId");

                    b.HasOne("SchoolHubApi.Models.Domain.User", null)
                        .WithMany("CourseClasses")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Homework", b =>
                {
                    b.HasOne("SchoolHubApi.Models.Domain.CourseClass", null)
                        .WithMany("Homeworks")
                        .HasForeignKey("CourseClassId");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.HomeworkPupil", b =>
                {
                    b.HasOne("SchoolHubApi.Models.Domain.ClassCoursePupilGrade", null)
                        .WithMany("HomeworkPupils")
                        .HasForeignKey("ClassCoursePupilGradeId");

                    b.HasOne("SchoolHubApi.Models.Domain.Homework", null)
                        .WithMany("HomeworkPupils")
                        .HasForeignKey("HomeworkId");

                    b.HasOne("SchoolHubApi.Models.Domain.Pupil", "Pupil")
                        .WithMany("HomeworkPupils")
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pupil");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.ParentChild", b =>
                {
                    b.HasOne("SchoolHubApi.Models.Domain.User", "Child")
                        .WithMany("Children")
                        .HasForeignKey("ChildUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SchoolHubApi.Models.Domain.User", "Parent")
                        .WithMany("Parents")
                        .HasForeignKey("ParentUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Pupil", b =>
                {
                    b.HasOne("SchoolHubApi.Models.Domain.Class", null)
                        .WithMany("Pupils")
                        .HasForeignKey("ClassId");

                    b.HasOne("SchoolHubApi.Models.Domain.User", null)
                        .WithMany("Pupils")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.UserRole", b =>
                {
                    b.HasOne("SchoolHubApi.Models.Domain.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolHubApi.Models.Domain.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Class", b =>
                {
                    b.Navigation("CourseClasses");

                    b.Navigation("Pupils");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.ClassCoursePupilGrade", b =>
                {
                    b.Navigation("HomeworkPupils");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Course", b =>
                {
                    b.Navigation("CourseClasses");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.CourseClass", b =>
                {
                    b.Navigation("ClassCoursePupilGrades");

                    b.Navigation("Homeworks");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.GradeName", b =>
                {
                    b.Navigation("ClassCoursePupilGrades");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Homework", b =>
                {
                    b.Navigation("HomeworkPupils");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Pupil", b =>
                {
                    b.Navigation("ClassCoursePupilGrades");

                    b.Navigation("HomeworkPupils");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("SchoolHubApi.Models.Domain.User", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("CourseClasses");

                    b.Navigation("Parents");

                    b.Navigation("Pupils");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
